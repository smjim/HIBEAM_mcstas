/********************************************************************************
* 
* McStas, neutron ray-tracing package
*         Copyright (C) 1997-2008, All rights reserved
*         Risoe National Laboratory, Roskilde, Denmark
*         Institut Laue Langevin, Grenoble, France
* 
* This file was written by McStasScript, which is a 
* python based McStas instrument generator written by 
* Mads Bertelsen in 2019 while employed at the 
* European Spallation Source Data Management and 
* Software Centre
* 
* Instrument e5
* 
* %Identification
* Written by: Python McStas Instrument Generator
* Date: 13:16:06 on April 18, 2023
* Origin: ESS DMSC
* %INSTRUMENT_SITE: Generated_instruments
* 
* 
* %Parameters
* 
* %End 
********************************************************************************/

DEFINE INSTRUMENT e5 (	double zvb = 12.3, 							// z position of Venetian blinds relative to monolith entrance [m]
						double length = 0.3, 						// z extent of Venetian blinds [m]
						double thickness = 0.002,					// thickness of Venetian blinds blades [m]
						double ydet = 0,							// vertical offset of target relative to venetian blinds [m]
						double yvb = 0,								// vertical offset of vb [m]
						double hvb = 0.4,							// total vertical extent of venetian blinds (height) [m]
						double wvb = 0.4, 							// total horizontal extent of venetian blinds (width) [m]
						double hdet = 0.5,							// total vertical extent of detector (for VB focusing) [m] 
						double zdet = 55							// z position of target relative to venetian blinds [m] 
)

DECLARE 
%{
%}

INITIALIZE 
%{
%}

TRACE 
COMPONENT progressbar = Progress_bar()
AT (0,0,0) ABSOLUTE

COMPONENT Source = ESS_butterfly(
 sector = "E", beamline = 5,
 cold_frac = 0.7, dist = 1.89088,
 focus_xw = 0.102, focus_yh = 0.276,
 Lmin = 0.1, Lmax = 20,
 n_pulses = 1, acc_power = 2)
AT (0,0,0) ABSOLUTE

COMPONENT BPCS = Arm()
AT (0.0,0.0,5.390879753610776) RELATIVE Source

COMPONENT nboa_engineering_constraints = Shape(
 geometry = "eng_constraints/nboa_engineering_constraints.off")
AT (0.0,-0.05499999999999999,-1.757) RELATIVE BPCS

COMPONENT monolith_entrance = Slit(
 xmin = -0.042645, xmax = 0.042645,
 ymin = -0.0896276, ymax = 0.0216309)
AT (0.0,0,-3.5) RELATIVE BPCS

COMPONENT monolith_guide = Guide_anyshape(
 m = 2, geometry = "eng_constraints/monolith_guide.off")
AT (0,0,32.0) RELATIVE BPCS
EXTEND %{
if (SCATTERED) {t = 0.0;};
%}

COMPONENT Al_window_exit = Al_window(
 thickness = 0.002)
AT (0,-0.145,0) RELATIVE BPCS

/*
COMPONENT MCPL_output = MCPL_output(
 filename = "e5")
AT (0.0,0.0,0.0) ABSOLUTE
*/

/* start of venbla */

COMPONENT psd_vb_enter = PSD_monitor(
    nx=128,
    ny=128,
    filename="PSD_vb_enter.dat", 
    xwidth=wvb, 
    yheight=hvb,
    restore_neutron=1)
AT (0, yvb, 0.5*zvb-length) RELATIVE monolith_entrance

COMPONENT TOF_radial_before = Monitor_nD(
    xwidth = 2, yheight = 2,
    restore_neutron=1, options = "list=all x y vx vy radius t",
    filename = "TOF_radial_before.dat")
AT (0, 0, 1E-9) RELATIVE PREVIOUS

COMPONENT vb_y = Venbla(
    reflect="refl_data/refl_m6.dat",
    zvb=zvb,		// z distance from source to vb
    zdet=zdet,		// z distance from vb to target 
    ydet=ydet,		// y displacement of detector
    len=length,
    thickness=thickness,
    hvb=hvb,
    wvb=wvb,
    hdet=hdet)
AT (0, yvb, zvb) RELATIVE monolith_entrance	// monolith entrance 2.7m from source
EXTEND %{
if (SCATTERED) {t = 0.0;};
%}

COMPONENT vb_x = Venbla(
    reflect="refl_data/refl_m6.dat",
    zvb=zvb+length+0.01,	
    zdet=zdet-length-0.01,
    ydet=ydet,
    len=length,
    thickness=thickness/2,	// x deflection blades placed vertically, dont have to deal w gravity bending
    hvb=wvb,
    wvb=hvb,
    hdet=hdet)
AT (0, 0, length+0.01) RELATIVE PREVIOUS // 1cm gap between vb sets 
ROTATED (0, 0, 90) RELATIVE PREVIOUS
EXTEND %{
if (SCATTERED) {t = 0.0;};
%}

COMPONENT psd_vb_exit = PSD_monitor(
    nx=128,
    ny=128,
    filename="PSD_vb_exit.dat", 
    xwidth=wvb, 
    yheight=hvb,
    restore_neutron=1)
AT (0, 0, 0.5*length) RELATIVE PREVIOUS 

COMPONENT TOF_radial_after = Monitor_nD(
    xwidth = 2, yheight = 2,
    restore_neutron=1, options = "list=all x y vx vy radius t",
    filename = "TOF_radial_after.dat")
AT (0, 0, 1E-9) RELATIVE PREVIOUS

/* end of venbla */

COMPONENT TOF_target = Monitor_nD(
    xwidth = 2, yheight = 2,
    restore_neutron=1,
    options = "list=all x y radius t",
    filename = "TOF_target.dat")
AT (0.0,0.0,59.5) RELATIVE BPCS

COMPONENT PSD_TOF = PSD_TOF_monitor(
 nx = 100, ny = 80,
 nt = 10, filename = "PSD_TOF.dat",
 xmin = -2.5, xmax = 2.5,
 ymin = -1.5, ymax = 1.5,
 tmin = 0, tmax = 300000)
AT (0.0,0.0,1E-9) RELATIVE PREVIOUS

FINALLY 
%{
// Start of finally for generated e5
%}

END
